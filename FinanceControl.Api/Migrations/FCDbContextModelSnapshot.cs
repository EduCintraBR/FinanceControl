// <auto-generated />
using System;
using FinanceControl.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinanceControl.Api.Migrations
{
    [DbContext(typeof(FCDbContext))]
    partial class FCDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.6.23329.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinanceControl.Api.Models.Cartao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LimiteCartao")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeBanco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeProprietario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cartoes");
                });

            modelBuilder.Entity("FinanceControl.Api.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("FinanceControl.Api.Models.Controle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<short>("Ano")
                        .HasColumnType("smallint");

                    b.Property<short>("Mes")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Controles");
                });

            modelBuilder.Entity("FinanceControl.Api.Models.Custos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaOrigemId")
                        .HasColumnType("int");

                    b.Property<int?>("ControleId")
                        .HasColumnType("int");

                    b.Property<bool>("EhParcelado")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParcelaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaOrigemId");

                    b.HasIndex("ControleId");

                    b.HasIndex("ParcelaId");

                    b.ToTable("Custos");
                });

            modelBuilder.Entity("FinanceControl.Api.Models.Ganhos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaOrigemId")
                        .HasColumnType("int");

                    b.Property<int?>("ControleId")
                        .HasColumnType("int");

                    b.Property<bool>("EhFixo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaOrigemId");

                    b.HasIndex("ControleId");

                    b.ToTable("Ganhos");
                });

            modelBuilder.Entity("FinanceControl.Api.Models.Parcela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CodParcelamento")
                        .HasColumnType("int");

                    b.Property<string>("MesAno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("ParcelaAtual")
                        .HasColumnType("smallint");

                    b.Property<short>("ParcelaFinal")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Parcela");
                });

            modelBuilder.Entity("FinanceControl.Api.Models.Parcelamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartaoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("QuantidadeParcelas")
                        .HasColumnType("smallint");

                    b.Property<string>("Responsavel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorTotalCompra")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CartaoId");

                    b.ToTable("Parcelamento");
                });

            modelBuilder.Entity("FinanceControl.Api.Models.Custos", b =>
                {
                    b.HasOne("FinanceControl.Api.Models.Categoria", "CategoriaOrigem")
                        .WithMany()
                        .HasForeignKey("CategoriaOrigemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceControl.Api.Models.Controle", null)
                        .WithMany("Custos")
                        .HasForeignKey("ControleId");

                    b.HasOne("FinanceControl.Api.Models.Parcela", "Parcela")
                        .WithMany()
                        .HasForeignKey("ParcelaId");

                    b.Navigation("CategoriaOrigem");

                    b.Navigation("Parcela");
                });

            modelBuilder.Entity("FinanceControl.Api.Models.Ganhos", b =>
                {
                    b.HasOne("FinanceControl.Api.Models.Categoria", "CategoriaOrigem")
                        .WithMany()
                        .HasForeignKey("CategoriaOrigemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceControl.Api.Models.Controle", null)
                        .WithMany("Ganhos")
                        .HasForeignKey("ControleId");

                    b.Navigation("CategoriaOrigem");
                });

            modelBuilder.Entity("FinanceControl.Api.Models.Parcelamento", b =>
                {
                    b.HasOne("FinanceControl.Api.Models.Cartao", "Cartao")
                        .WithMany()
                        .HasForeignKey("CartaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartao");
                });

            modelBuilder.Entity("FinanceControl.Api.Models.Controle", b =>
                {
                    b.Navigation("Custos");

                    b.Navigation("Ganhos");
                });
#pragma warning restore 612, 618
        }
    }
}
